{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/@dhis2/ui-core/build/es/Card/index.js","webpack:///./src/components/GuideCards/style.js","webpack:///./src/components/GuideCards/index.js","webpack:///./src/components/Article/Content.js","webpack:///./src/components/Article/index.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","listQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components__WEBPACK_IMPORTED_MODULE_1__","IndexPage","_ref","guides","data","allMarkdownRemark","edges","map","_ref2","node","path","frontmatter","title","description","a","createElement","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","Card","className","children","react_default","style_default","dynamic","theme","white","classnames_default","id","propTypes","prop_types_default","string","Container","styled","nav","withConfig","displayName","componentId","StyledLink","Link","colors","StyledCard","Title","h2","Description","p","GuideCard","to","GuideCards","g","GuideCards_GuideCard","StyledDiv","div","Content","Content_StyledCard","Article","Content_Content","GuideCards_GuideCards","Article_Article"],"mappings":"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","file":"component---src-pages-index-js-002656f69e17175e84e4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { GuideCards } from '../components'\n\nconst IndexPage = ({ data }) => {\n    const guides = data.allMarkdownRemark.edges.map(({ node }) => ({\n        path: `/${node.frontmatter.path}`,\n        title: node.frontmatter.title,\n        description: node.frontmatter.description,\n    }))\n\n    return <GuideCards guides={guides} />\n}\n\nexport default IndexPage\n\nexport const listQuery = graphql`\n    query {\n        allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___index] }) {\n            edges {\n                node {\n                    frontmatter {\n                        path\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport cx from 'classnames';\nimport { colors } from '../theme.js';\n\nconst Card = ({\n  className,\n  children\n}) => React.createElement(\"div\", {\n  className: _JSXStyle.dynamic([[\"166161216\", [colors.white]]]) + \" \" + (cx(className) || \"\")\n}, children, React.createElement(_JSXStyle, {\n  id: \"166161216\",\n  dynamic: [colors.white]\n}, [`div.__jsx-style-dynamic-selector{display:inline-block;position:relative;width:100%;height:100%;border-radius:3px;background:${colors.white};box-shadow:0 0 1px 0 rgba(64,75,90,0.2), 0 2px 1px 0 rgba(64,75,90,0.28);}`]));\n\nCard.propTypes = {\n  className: propTypes.string,\n  children: propTypes.node\n};\nexport { Card };","import styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { Card } from '@dhis2/ui-core'\nimport * as colors from '../../constants/colors'\n\nexport const Container = styled.nav`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-content: space-between;\n    padding: 8px;\n`\n\nexport const StyledLink = styled(Link)`\n    margin: 12px;\n    text-align: center;\n    text-decoration: none;\n    div {\n        transition: all 200ms;\n    }\n    &:hover,\n    &:focus {\n        outline: unset;\n        div {\n            box-shadow: ${colors.shadowLight} 0px 0px 1px 0px,\n                ${colors.shadowLight} 0px 14px 28px -6px;\n        }\n    }\n`\n\nexport const StyledCard = styled(Card)`\n    height: 220px !important;\n    width: 400px !important;\n    padding: 16px;\n`\n\nexport const Title = styled.h2`\n    color: ${colors.text};\n    font-size: 1.25rem;\n    line-height: 1.6;\n    font-weight: 500;\n`\n\nexport const Description = styled.p`\n    padding-top: 24px;\n    color: black;\n`\n","import React from 'react'\nimport { Container, StyledLink, StyledCard, Description, Title } from './style'\n\nconst GuideCard = ({ path, title, description }) => (\n    <StyledLink to={path}>\n        <StyledCard>\n            <Title>{title}</Title>\n            <Description>{description}</Description>\n        </StyledCard>\n    </StyledLink>\n)\n\nexport const GuideCards = ({ guides }) => (\n    <Container>\n        {guides.map(g => (\n            <GuideCard\n                key={g.path}\n                path={g.path}\n                title={g.title}\n                description={g.description}\n            />\n        ))}\n    </Container>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@dhis2/ui-core'\nimport * as colors from '../../constants/colors'\n\nconst StyledCard = styled(Card)`\n    margin: 20px;\n    width: calc(100% - 40px) !important;\n    @media (max-width: 900px) {\n        border-radius: unset !important;\n        margin: unset;\n        width: 100% !important;\n        .vscode-highlight {\n            margin-left: -24px;\n            margin-right: -24px;\n            border-radius: unset;\n        }\n    }\n`\n\nconst StyledDiv = styled.div`\n    padding: 24px;\n    a {\n        text-decoration: none;\n        color: ${colors.blueDark};\n        outline: none;\n    }\n    a:hover:not(.anchor),\n    a:focus:not(.anchor) {\n        border-bottom: 1px solid ${colors.blueDark};\n    }\n    p {\n        line-height: 1.8rem;\n        margin-block-start: 1.5em;\n        margin-block-end: 1.5em;\n        code {\n            font-family: monospace;\n            background-color: ${colors.dark};\n            color: ${colors.code};\n            border-radius: 3px;\n            margin: 0;\n            padding: 0.2em 0.4em;\n        }\n    }\n    h1 {\n        font-size: 3rem;\n        margin-block-start: 1rem;\n        margin-block-end: 1rem;\n    }\n    h2 {\n        font-size: 2rem;\n        margin-block-start: 3rem;\n        margin-block-end: 1rem;\n    }\n    h3 {\n        font-size: 1.4rem;\n        margin-block-start: 3rem;\n        margin-block-end: 1rem;\n    }\n    li {\n        line-height: 1.4rem;\n    }\n    .vscode-highlight-code {\n        font-size: 14px;\n        line-height: 1.4;\n        span {\n            font-family: monospace;\n        }\n        .vscode-highlight-line {\n            padding-right: 0;\n        }\n        .vscode-highlight-line-highlighted {\n            background-color: ${colors.highlight};\n        }\n    }\n`\n\nexport const Content = ({ children }) => (\n    <StyledCard>\n        <StyledDiv>{children}</StyledDiv>\n    </StyledCard>\n)\n","import React from 'react'\nimport { Content } from './Content'\n\nexport const Article = ({ children }) => <Content>{children}</Content>\n","export { GuideCards } from './GuideCards'\nexport { Article } from './Article'\nexport { Navigator } from './Navigator'\n"],"sourceRoot":""}