{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/styles/typography.js","webpack:///./src/styles/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/GuideCards/style.js","webpack:///./src/components/GuideCards/index.js","webpack:///./src/components/Layout/style.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components__WEBPACK_IMPORTED_MODULE_1__","guides","title","summary","path","a","createElement","Title","styled","h1","withConfig","displayName","componentId","Heading","h2","Text","div","d","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","createContext","object","func","Spacer","Container","StyledCard","Card","Summary","p","GuideCard","react_default","gatsby_link_default","to","styles","GuideCards","_ref2","map","g","GuideCards_GuideCard","key","BodyStyle","createGlobalStyle","_templateObject","section","Main","main","Sidebar","aside","Layout","children","Fragment","style_Container","GuideCards_GuideCards","Layout_Layout"],"mappings":"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","file":"component---src-pages-index-js-2d415ea50c03cc662490.js","sourcesContent":["import React from 'react'\nimport { Layout, GuideCards } from '../components'\n\nconst guides = [\n    {\n        title: 'API',\n        summary: 'Learn to use the DHIS2 API.',\n        path: '/api',\n    },\n    {\n        title: 'DHIS2 UI',\n        summary: 'Learn to the use DHIS2 UI library.',\n        path: '/ui',\n    },\n    {\n        title: 'Apps',\n        summary: 'Learn to create DHIS2 apps.',\n        path: '/apps',\n    },\n    {\n        title: 'Widgets',\n        summary: 'Learn to create DHIS2 widgets.',\n        path: '/widgets',\n    },\n]\n\nexport default () => (\n    <Layout>\n        <GuideCards guides={guides} />\n    </Layout>\n)\n","//import { bool } from 'prop-types'\nimport styled from 'styled-components'\nimport { colors } from '@dhis2/ui-core'\n\nexport const Title = styled.h1`\n    font-weight: 500;\n`\n\nexport const Heading = styled.h2`\n    color: #0d0d0e;\n    font-size: 1.25rem;\n    line-height: 1.6;\n    font-weight: 500;\n`\n\nexport const Text = styled.div`\n    color: #0d0d0e;\n`\n\nexport const Label = styled.div`\n    /*color: ${colors.grey700};*/\n    white-space: nowrap;\n    padding: 0px 12px 12px 16px;\n    line-height: 24px;\n    font-weight: 500;\n`\n\n/*Label.propTypes = {\n    required: bool,\n    disabled: bool,\n}*/\n","export * from './typography'\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import styled from 'styled-components'\nimport { Card } from '@dhis2/ui-core'\n\nexport const Spacer = styled.div`\n    margin: 16px;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: end;\n    align-content: space-between;\n    padding: 8px;\n`\n\nexport const StyledCard = styled(Card)`\n    height: 200px !important;\n    width: 360px !important;\n    padding: 16px;\n    text-align: center;\n    &:hover {\n        box-shadow: rgba(64, 75, 90, 0.3) 0px 0px 1px 0px,\n            rgba(64, 75, 90, 0.3) 0px 14px 28px -6px;\n        cursor: pointer;\n    }\n`\n\nexport const Summary = styled.p`\n    padding-top: 24px;\n    color: #0d0d0e;\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Heading } from '../../styles'\nimport { Spacer, Container, StyledCard, Summary } from './style'\n\nconst GuideCard = ({ title, summary, path }) => (\n    <Spacer>\n        <Link to={path}>\n            <StyledCard>\n                <Heading>{title}</Heading>\n                <Summary>{summary}</Summary>\n            </StyledCard>\n        </Link>\n    </Spacer>\n)\n\nexport const GuideCards = ({ guides }) => (\n    <Container>\n        {guides.map(g => (\n            <GuideCard\n                key={g.title}\n                title={g.title}\n                summary={g.summary}\n                path={g.path}\n            />\n        ))}\n    </Container>\n)\n","import styled, { createGlobalStyle } from 'styled-components'\nimport 'typeface-roboto'\n\nexport const BodyStyle = createGlobalStyle`\n    html {\n        height: 100%;\n    }\n    body {\n        background-color: rgb(240, 240, 240);\n        margin: 0;\n        padding: 0;\n        font-family: Roboto;\n        height: 100%;\n    }\n`\n\nexport const Container = styled.section`\n    display: flex;\n    height: 100%;\n`\n\nexport const Main = styled.main`\n    max-width: 1600px;\n    width: 100%;\n`\n\nexport const Sidebar = styled.aside`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    padding: 16px;\n`\n","import React from 'react'\n//import { node, oneOfType, arrayOf } from 'prop-types'\nimport { Title } from '../../styles'\nimport { BodyStyle, Container, Main, Sidebar } from './style'\n\nexport const Layout = ({ children }) => (\n    <>\n        <BodyStyle />\n        <Title>DHIS2 design lab</Title>\n        <Container>\n            <Sidebar>\n                <p>I'm a sidebar!</p>\n            </Sidebar>\n            <Main>{children}</Main>\n        </Container>\n    </>\n)\n\n/*Layout.propTypes = {\n    children: oneOfType([node, arrayOf(node)])\n}*/\n","export * from './GuideCards'\nexport * from './Icon'\nexport * from './Layout'\n"],"sourceRoot":""}